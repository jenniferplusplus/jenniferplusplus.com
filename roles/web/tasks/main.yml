- name: install services
  become: true
  apt:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: latest

- name: copy global configs
  become: true
  ansible.builtin.copy:
    dest: /etc/nginx/conf.d/connection_upgrade.conf
    src: files/connection_upgrade.conf
    mode: 0644
  notify: 
    - restart nginx

- name: copy ghost site config
  become: true
  ansible.builtin.template:
    dest: /etc/nginx/sites-available/{{inventory_hostname}}.conf
    src: templates/sites-available.ghost.conf
    mode: 0644
  notify: 
    - restart nginx

- name: enable ghost site
  become: true
  ansible.builtin.file:
    src: /etc/nginx/sites-available/{{inventory_hostname}}.conf
    dest: /etc/nginx/sites-enabled/{{site_name}}.conf
    state: link
  register: enable_ghost
  notify: 
    - restart nginx

- name: copy nginx_status site config
  become: true
  ansible.builtin.copy:
    src: files/status.conf
    dest: /etc/nginx/sites-available/nginx_status.conf
  notify: 
    - restart nginx

- name: enable nginx_status site
  become: true
  ansible.builtin.file:
    src: /etc/nginx/sites-available/nginx_status.conf
    dest: /etc/nginx/sites-enabled/nginx_status.conf
    state: link
  notify: 
    - restart nginx
  
- name: enable telegraf nginx plugin
  become: true
  ansible.builtin.template:
    dest: /etc/telegraf/telegraf.d/nginx.telegraf.conf
    src: templates/nginx.telegraf.conf
    owner: telegraf
    mode: 0644
  notify: restart telegraf

- name: check grafana key exists
  become: true
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/grafana.{{nginx_server_name}}/privkey.pem
  register: stat_grafana


- name: copy grafana site config
  become: true
  ansible.builtin.template:
    dest: /etc/nginx/sites-available/grafana.conf
    src: templates/sites-available.grafana.conf
    mode: 0644
  notify: 
    - restart nginx

- name: enable grafana site
  become: true
  ansible.builtin.file:
    src: /etc/nginx/sites-available/grafana.conf
    dest: /etc/nginx/sites-enabled/grafana.conf
    state: link
  notify: 
    - restart nginx

- name: register certbot
  become: true
  ansible.builtin.command: 
    argv: 
      - certbot 
      - register 
      - -n 
      - --agree-tos 
      - --email 
      - "{{admin_email}}"
  args:
    creates: /etc/letsencrypt/accounts

- name: 'get base certificate'
  become: true
  when: use_ssl == true
  command: 'certbot certonly -n --nginx --keep -d {{ nginx_server_name }}'
  args:
    creates: '/etc/letsencrypt/live/{{ nginx_server_name }}'
  ignore_errors: true
  notify: 
    - restart nginx

- name: get grafana subdomain certificate
  become: true
  when: use_ssl == true
  command: 'certbot certonly -n --webroot --webroot-path /var/www/grafana/system/nginx-root --keep -d grafana.{{nginx_server_name}}'
  args:
    creates: '/etc/letsencrypt/live/grafana.{{nginx_server_name}}'
  ignore_errors: true
  notify: 
    - restart nginx
